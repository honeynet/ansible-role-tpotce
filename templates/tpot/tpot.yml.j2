# T-Pot (Sensor)
# Do not erase ports sections, these are used by /opt/tpot/bin/rules.sh to setup iptables ACCEPT rules for NFQ (honeytrap / glutton)
version: '2.3'

networks:
{% if "adbhoney" in honeypot_list %}
  adbhoney_local:
{% endif %}
{% if "citrixhoneypot" in honeypot_list %}
  citrixhoneypot_local:
{% endif %}
{% if "conpot" in honeypot_list %}
  conpot_local_IEC104:
  conpot_local_guardian_ast:
  conpot_local_ipmi:
  conpot_local_kamstrup_382:
{% endif %}
{% if "cowrie" in honeypot_list %}
  cowrie_local:
{% endif %}
{% if "dicompot" in honeypot_list %}
  dicompot_local:
{% endif %}
{% if "dionaea" in honeypot_list %}
  dionaea_local:
{% endif %}
{% if "elasticpot" in honeypot_list %}
  elasticpot_local:
{% endif %}
{% if "heralding" in honeypot_list %}
  heralding_local:
{% endif %}
{% if "honeypy" in honeypot_list %}
  honeypy_local:
{% endif %}
{% if "honeysap" in honeypot_list %}
  honeysap_local:
{% endif %}
{% if "ipphoney" in honeypot_list %}
  ipphoney_local:
{% endif %}
{% if "mailoney" in honeypot_list %}
  mailoney_local:
{% endif %}
{% if "medpot" in honeypot_list %}
  medpot_local:
{% endif %}
{% if "rdpy" in honeypot_list %}
  rdpy_local:
{% endif %}
{% if "tanner" in honeypot_list %}
  tanner_local:
{% endif %}
{% if "log4pot" in honeypot_list %}
  log4pot_local:
{% endif %}
{% if "ewsposter" in honeypot_list %}
  ewsposter_local:
{% endif %}

services:

##################
#### Honeypots
##################

{% if "adbhoney" in honeypot_list %}
# Adbhoney service
  adbhoney:
    container_name: adbhoney
    restart: always
    networks:
     - adbhoney_local
    ports:
     - "5555:5555"
    image: "dtagdevsec/adbhoney:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/adbhoney/log:/opt/adbhoney/log
     - /data/adbhoney/downloads:/opt/adbhoney/dl
{% endif %}

{% if "ciscoasa" in honeypot_list %}
# Ciscoasa service
  ciscoasa:
    container_name: ciscoasa
    restart: always
    tmpfs:
     - /tmp/ciscoasa:uid=2000,gid=2000
    network_mode: "host"
    ports:
     - "5000:5000/udp"
     - "8443:8443"
    image: "dtagdevsec/ciscoasa:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/ciscoasa/log:/var/log/ciscoasa
{% endif %}

{% if "citrixhoneypot" in honeypot_list %}
# CitrixHoneypot service
  citrixhoneypot:
    container_name: citrixhoneypot
    restart: always
    networks:
     - citrixhoneypot_local
    ports:
     - "443:443"
    image: "dtagdevsec/citrixhoneypot:2006"
    read_only: true
    volumes:
     - /data/citrixhoneypot/logs:/opt/citrixhoneypot/logs
{% endif %}

{% if "conpot" in honeypot_list %}
# Conpot IEC104 service
  conpot_IEC104:
    container_name: conpot_iec104
    restart: always
    environment:
     - CONPOT_CONFIG=/etc/conpot/conpot.cfg
     - CONPOT_JSON_LOG=/var/log/conpot/conpot_IEC104.json
     - CONPOT_LOG=/var/log/conpot/conpot_IEC104.log
     - CONPOT_TEMPLATE=IEC104
     - CONPOT_TMP=/tmp/conpot
    tmpfs:
     - /tmp/conpot:uid=2000,gid=2000
    networks:
     - conpot_local_IEC104
    ports:
     - "161:161"
     - "2404:2404"
    image: "dtagdevsec/conpot:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/conpot/log:/var/log/conpot

# Conpot guardian_ast service
  conpot_guardian_ast:
    container_name: conpot_guardian_ast
    restart: always
    environment:
     - CONPOT_CONFIG=/etc/conpot/conpot.cfg
     - CONPOT_JSON_LOG=/var/log/conpot/conpot_guardian_ast.json
     - CONPOT_LOG=/var/log/conpot/conpot_guardian_ast.log
     - CONPOT_TEMPLATE=guardian_ast
     - CONPOT_TMP=/tmp/conpot
    tmpfs:
     - /tmp/conpot:uid=2000,gid=2000
    networks:
     - conpot_local_guardian_ast
    ports:
     - "10001:10001"
    image: "dtagdevsec/conpot:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/conpot/log:/var/log/conpot

# Conpot ipmi
  conpot_ipmi:
    container_name: conpot_ipmi
    restart: always
    environment:
     - CONPOT_CONFIG=/etc/conpot/conpot.cfg
     - CONPOT_JSON_LOG=/var/log/conpot/conpot_ipmi.json
     - CONPOT_LOG=/var/log/conpot/conpot_ipmi.log
     - CONPOT_TEMPLATE=ipmi
     - CONPOT_TMP=/tmp/conpot
    tmpfs:
     - /tmp/conpot:uid=2000,gid=2000
    networks:
     - conpot_local_ipmi
    ports:
     - "623:623"
    image: "dtagdevsec/conpot:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/conpot/log:/var/log/conpot

# Conpot kamstrup_382
  conpot_kamstrup_382:
    container_name: conpot_kamstrup_382
    restart: always
    environment:
     - CONPOT_CONFIG=/etc/conpot/conpot.cfg
     - CONPOT_JSON_LOG=/var/log/conpot/conpot_kamstrup_382.json
     - CONPOT_LOG=/var/log/conpot/conpot_kamstrup_382.log
     - CONPOT_TEMPLATE=kamstrup_382
     - CONPOT_TMP=/tmp/conpot
    tmpfs:
     - /tmp/conpot:uid=2000,gid=2000
    networks:
     - conpot_local_kamstrup_382
    ports:
     - "1025:1025"
     - "50100:50100"
    image: "dtagdevsec/conpot:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/conpot/log:/var/log/conpot
{% endif %}

{% if "cowrie" in honeypot_list %}
# Cowrie service
  cowrie:
    container_name: cowrie
    restart: always
    tmpfs:
     - /tmp/cowrie:uid=2000,gid=2000
     - /tmp/cowrie/data:uid=2000,gid=2000
    networks:
     - cowrie_local
    ports:
     - "22:22"
     - "23:23"
    image: "dtagdevsec/cowrie:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/cowrie/downloads:/home/cowrie/cowrie/dl
     - /data/cowrie/keys:/home/cowrie/cowrie/etc
     - /data/cowrie/log:/home/cowrie/cowrie/log
     - /data/cowrie/log/tty:/home/cowrie/cowrie/log/tty
{% endif %}

{% if "dicompot" in honeypot_list %}
# Dicompot service
  dicompot:
    container_name: dicompot
    restart: always
    networks:
     - dicompot_local
    ports:
     - "11112:11112"
    image: "dtagdevsec/dicompot:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/dicompot/log:/var/log/dicompot
{% endif %}

{% if "dionaea" in honeypot_list %}
# Dionaea service
  dionaea:
    container_name: dionaea
    stdin_open: true
    tty: true
    restart: always
    networks:
     - dionaea_local
    ports:
     - "20:20"
     - "21:21"
     - "42:42"
     - "69:69/udp"
     - "81:81"
     - "135:135"
{% if "citrixhoneypot" in honeypot_list %}
    #  - "443:443"
{% else %}
     - "443:443"
{% endif %}
     - "445:445"
     - "1433:1433"
     - "1723:1723"
     - "1883:1883"
     - "3306:3306"
     - "5060:5060"
     - "5060:5060/udp"
     - "5061:5061"
     - "27017:27017"
    image: "dtagdevsec/dionaea:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/dionaea/roots/ftp:/opt/dionaea/var/dionaea/roots/ftp
     - /data/dionaea/roots/tftp:/opt/dionaea/var/dionaea/roots/tftp
     - /data/dionaea/roots/www:/opt/dionaea/var/dionaea/roots/www
     - /data/dionaea/roots/upnp:/opt/dionaea/var/dionaea/roots/upnp
     - /data/dionaea:/opt/dionaea/var/dionaea
     - /data/dionaea/binaries:/opt/dionaea/var/dionaea/binaries
     - /data/dionaea/log:/opt/dionaea/var/log
     - /data/dionaea/rtp:/opt/dionaea/var/dionaea/rtp
{% endif %}

{% if "elasticpot" in honeypot_list %}
# ElasticPot service
  elasticpot:
    container_name: elasticpot
    restart: always
    networks:
     - elasticpot_local
    ports:
     - "9200:9200"
    image: "dtagdevsec/elasticpot:2006"
    read_only: true
    volumes:
     - /data/elasticpot/log:/opt/elasticpot/log
{% endif %}

{% if "glutton" in honeypot_list %}
# Glutton service
  glutton:
    container_name: glutton
    restart: always
    tmpfs:
     - /var/lib/glutton:uid=2000,gid=2000
     - /run:uid=2000,gid=2000
    network_mode: "host"
    cap_add:
     - NET_ADMIN
    image: "dtagdevsec/glutton:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/glutton/log:/var/log/glutton
#     - /root/tpotce/docker/glutton/dist/rules.yaml:/opt/glutton/rules/rules.yaml
{% endif %}

{% if "heralding" in honeypot_list %}
# Heralding service
  heralding:
    container_name: heralding
    restart: always
    tmpfs:
     - /tmp/heralding:uid=2000,gid=2000
    networks:
     - heralding_local
    ports:
    # - "21:21"
    # - "22:22"
    # - "23:23"
    # - "25:25"
    # - "80:80"
     - "110:110"
     - "143:143"
    # - "443:443"
     - "993:993"
     - "995:995"
    # - "3306:3306"
    # - "3389:3389"
     - "1080:1080"
     - "5432:5432"
     - "5900:5900"
    image: "dtagdevsec/heralding:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/heralding/log:/var/log/heralding
{% endif %}

{% if "honeypy" in honeypot_list %}
# HoneyPy service
  honeypy:
    container_name: honeypy
    restart: always
    networks:
     - honeypy_local
    ports:
     - "7:7"
     - "8:8"
     - "2048:2048"
     - "2323:2323"
     - "2324:2324"
     - "4096:4096"
    #  - "9200:9200"
    image: "dtagdevsec/honeypy:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/honeypy/log:/opt/honeypy/log
{% endif %}

{% if "honeysap" in honeypot_list %}
# HoneySAP service
  honeysap:
    container_name: honeysap
    restart: always
    networks:
     - honeysap_local
    ports:
     - "3299:3299"
    image: "dtagdevsec/honeysap:2006"
    volumes:
     - /data/honeysap/log:/opt/honeysap/log
{% endif %}

{% if "honeysap" in honeypot_list %}
# Ipphoney service
  ipphoney:
    container_name: ipphoney
    restart: always
    networks:
     - ipphoney_local
    ports:
     - "631:631"
    image: "dtagdevsec/ipphoney:2006"
    read_only: true
    volumes:
     - /data/ipphoney/log:/opt/ipphoney/log
{% endif %}

{% if "honeytrap" in honeypot_list %}
# Honeytrap service
  honeytrap:
    container_name: honeytrap
    restart: always
    tmpfs:
     - /tmp/honeytrap:uid=2000,gid=2000
    network_mode: "host"
    cap_add:
     - NET_ADMIN
    image: "dtagdevsec/honeytrap:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/honeytrap/attacks:/opt/honeytrap/var/attacks
     - /data/honeytrap/downloads:/opt/honeytrap/var/downloads
     - /data/honeytrap/log:/opt/honeytrap/var/log
{% endif %}

{% if "mailoney" in honeypot_list %}
# Mailoney service
  mailoney:
    container_name: mailoney
    restart: always
    environment:
     - HPFEEDS_SERVER=
     - HPFEEDS_IDENT=user
     - HPFEEDS_SECRET=pass
     - HPFEEDS_PORT=20000
     - HPFEEDS_CHANNELPREFIX=prefix
    networks:
     - mailoney_local
    ports:
     - "25:25"
    image: "dtagdevsec/mailoney:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/mailoney/log:/opt/mailoney/logs
{% endif %}

{% if "medpot" in honeypot_list %}
# Medpot service
  medpot:
    container_name: medpot
    restart: always
    networks:
     - medpot_local
    ports:
     - "2575:2575"
    image: "dtagdevsec/medpot:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/medpot/log/:/var/log/medpot
{% endif %}

{% if "rdpy" in honeypot_list %}
# Rdpy service
  rdpy:
    container_name: rdpy
    extra_hosts:
     - hpfeeds.example.com:127.0.0.1
    restart: always
    environment:
     - HPFEEDS_SERVER=hpfeeds.example.com
     - HPFEEDS_IDENT=user
     - HPFEEDS_SECRET=pass
     - HPFEEDS_PORT=65000
     - SERVERID=id
    networks:
     - rdpy_local
    ports:
     - "3389:3389"
    image: "dtagdevsec/rdpy:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/rdpy/log:/var/log/rdpy
{% endif %}

{% if "tanner" in honeypot_list %}
#### Snare / Tanner
## Tanner Redis Service
  tanner_redis:
    container_name: tanner_redis
    restart: always
    tty: true
    networks:
     - tanner_local
    image: "dtagdevsec/redis:{{ tpot_version }}"
    read_only: true

## PHP Sandbox service
  tanner_phpox:
    container_name: tanner_phpox
    restart: always
    tty: true
    networks:
     - tanner_local
    image: "dtagdevsec/phpox:{{ tpot_version }}"
    read_only: true

## Tanner API Service
  tanner_api:
    container_name: tanner_api
    restart: always
    tmpfs:
     - /tmp/tanner:uid=2000,gid=2000
    tty: true
    networks:
     - tanner_local
    image: "dtagdevsec/tanner:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/tanner/log:/var/log/tanner
    command: tannerapi
    depends_on:
     - tanner_redis

# ## Tanner WEB Service
#   tanner_web:
#     container_name: tanner_web
#     restart: always
#     tmpfs:
#      - /tmp/tanner:uid=2000,gid=2000
#     tty: true
#     networks:
#      - tanner_local
#     image: "dtagdevsec/tanner:{{ tpot_version }}"
#     command: tannerweb
#     read_only: true
#     volumes:
#      - /data/tanner/log:/var/log/tanner
#     depends_on:
#      - tanner_redis

## Tanner Service
  tanner:
    container_name: tanner
    restart: always
    tmpfs:
     - /tmp/tanner:uid=2000,gid=2000
    tty: true
    networks:
     - tanner_local
    image: "dtagdevsec/tanner:{{ tpot_version }}"
    command: tanner
    read_only: true
    volumes:
     - /data/tanner/log:/var/log/tanner
     - /data/tanner/files:/opt/tanner/files
    depends_on:
     - tanner_api
    #  - tanner_web
     - tanner_phpox

## Snare Service
  snare:
    container_name: snare
    restart: always
    tty: true
    networks:
     - tanner_local
    ports:
     - "80:80"
    image: "dtagdevsec/snare:{{ tpot_version }}"
    depends_on:
     - tanner
{% endif %}

{% if "log4pot" in honeypot_list %}
# Log4pot service
  log4pot:
    container_name: log4pot
    restart: always
    networks:
     - log4pot_local
    ports:
     - "80:8080"
     - "443:8080"
     - "8080:8080"
     - "9200:8080"
    image: "dtagdevsec/log4pot:2006"
    read_only: true
    volumes:
     - /data/log4pot/log:/var/log/log4pot/log
     - /data/log4pot/payloads:/var/log/log4pot/payloads
{% endif %}

##################
#### NSM
##################

{% if "fatt" in honeypot_list %}
# Fatt service
  fatt:
    build: .
    container_name: fatt
    restart: always
    network_mode: "host"
    cap_add:
     - NET_ADMIN
     - SYS_NICE
     - NET_RAW
    image: "dtagdevsec/fatt:{{ tpot_version }}"
    volumes:
     - /data/fatt/log:/opt/fatt/log
{% endif %}

{% if "p0f" in honeypot_list %}
# P0f service
  p0f:
    container_name: p0f
    restart: always
    network_mode: "host"
    image: "dtagdevsec/p0f:{{ tpot_version }}"
    read_only: true
    volumes:
     - /data/p0f/log:/var/log/p0f
{% endif %}

{% if "suricata" in honeypot_list %}
# Suricata service
  suricata:
    container_name: suricata
    restart: always
    environment:
    # For ET Pro ruleset replace "OPEN" with your OINKCODE
     - OINKCODE=OPEN
    network_mode: "host"
    cap_add:
     - NET_ADMIN
     - SYS_NICE
     - NET_RAW
    image: "dtagdevsec/suricata:{{ tpot_version }}"
    volumes:
     - /data/suricata/log:/var/log/suricata
{% endif %}


##################
#### Tools
##################

{% if "filebeat" in honeypot_list %}
## Filebeat service
  filebeat:
    container_name: filebeat
    restart: always
    env_file:
     - /opt/tpot/etc/compose/elk_environment
    image: "quay.io/honeynet/filebeat:{{ filebeat_version }}"
    volumes:
     - /data:/data:ro
     - /opt/filebeat/etc/conf.d:/usr/share/filebeat/conf.d:ro
     - /opt/filebeat/etc/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
{% endif %}

{% if "ewsposter" in honeypot_list %}
# Ewsposter service
  ewsposter:
    container_name: ewsposter
    restart: always
    networks:
     - ewsposter_local
    environment:
     - EWS_HPFEEDS_ENABLE=false
     - EWS_HPFEEDS_HOST=host
     - EWS_HPFEEDS_PORT=port
     - EWS_HPFEEDS_CHANNELS=channels
     - EWS_HPFEEDS_IDENT=user
     - EWS_HPFEEDS_SECRET=secret
     - EWS_HPFEEDS_TLSCERT=false
     - EWS_HPFEEDS_FORMAT=json
    env_file:
     - /opt/tpot/etc/compose/elk_environment
    image: "dtagdevsec/ewsposter:{{ tpot_version }}"
    volumes:
     - /data:/data
     - /data/ews/conf/ews.ip:/opt/ewsposter/ews.ip
{% endif %}
